name: Gradle Package

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:
    # 支持从 Actions 页面手动触发工作流

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      # 检出代码
      - uses: actions/checkout@v4

      # 设置 JDK 17 环境
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # 设置 Gradle
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582

      # 使用 Gradle 构建项目
      - name: Build with Gradle
        run: ./gradlew build

      # 检查版本号是否发生变化
      - name: Check for version change
        id: check_version
        run: |
          # 提取当前版本号（假设从 `gradle.properties` 中读取）
          CURRENT_VERSION=$(grep '^version=' gradle.properties | cut -d '=' -f 2)
          echo "Current Version: $CURRENT_VERSION"
          
          # 比较版本号与上次发布的是否相同
          if [ -f last_version.txt ]; then
            LAST_VERSION=$(cat last_version.txt)
            echo "Last Version: $LAST_VERSION"
            if [ "$CURRENT_VERSION" = "$LAST_VERSION" ]; then
              echo "No version change. Skipping publish."
              echo "publish=false" >> $GITHUB_ENV
            else
              echo "Version changed to $CURRENT_VERSION"
              echo "$CURRENT_VERSION" > last_version.txt
              echo "publish=true" >> $GITHUB_ENV
            fi
          else
            echo "No previous version found. Publishing as first version."
            echo "$CURRENT_VERSION" > last_version.txt
            echo "publish=true" >> $GITHUB_ENV
          fi

      # 如果版本号更改，则发布包到 GitHub Packages
      - name: Publish to GitHub Packages
        if: env.publish == 'true'
        run: ./gradlew publish
        env:
          USERNAME: ${{ github.actor }}
          TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 保存版本信息以供下次检查
      - name: Save version information
        if: env.publish == 'true'
        run: |
          echo "Saving current version to cache."
        # 如果需要持久化版本号，可以通过 artifact 或 cache 存储。
        # 使用 cache 时需要根据上下文生成 key：
        with:
          path: last_version.txt
